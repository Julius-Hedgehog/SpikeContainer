

//******************************************************************************************************
// { filename }.cs - { assembly name - namespace name }: Assembly - { solution/project name }: Solution
//
// Copyright © 2017, Polartec Tennesee Manufacturing LLC. All Rights Reserved.
//
// Unless agreed to in writing, the subject software distributed under the License is distributed on an
// "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
// License for the specific language governing permissions and limitations.
//
// Code Modification History:
// ----------------------------------------------------------------------------------------------------
// { date :: mm/dd/yyyy } - { author id - initials etc. }
// { note content - description }
//
//******************************************************************************************************


// ----------------------------------
// precompile directives and pragmas
// #define
// #pragma
// ----------------------------------
// = = = = = = = = = = = = = = = = = =

// = = = = = = = = = = = = = = = = = =
// ----------------------------------


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows.Forms;


using Microsoft.Win32.SafeHandles;
using System.Runtime.InteropServices;



#region [ Enumerations ]

#endregion




#region [ Members ]

// Nested Types
// Constants
// Delegates
// Events
// Fields

#endregion

#region [ Constructors ]

#endregion

#region [ Properties ]

#endregion

#region [ Methods ]

#region [ IDisposable ]

#endregion

#region [ Implementation ]

#endregion

#endregion

#region [ Operators ]
#endregion

#region [ Static ]

// Static Fields
// Static Constructor
// Static Properties
// Static Methods

#endregion

#region [ Internal Classes ]

...

#endregion




//----------------------------
// Application, 
// AppDomain,
// Assembly,
// Environment,
// Screen,
// SystemInformation,
// Properties
// Process,
// Program, 
//----------------------------



private bool m_disposed; // Disposed flag

/// <summary>
/// Releases all the resources used by the <see cref="Foo"/> object.
/// </summary>
public void Dispose()
{

	Dispose(true);
	GC.SuppressFinalize(this);

}
/// <summary>
/// Releases the unmanaged resources used by the <see cref="Foo"/> object.
/// </summary>
/// <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
protected virtual void Dispose(bool disposing)
{
	if (!m_disposed)
	{
		try
		{
			if (disposing)
			{

				if (m_cache != null)
					m_cache.Dispose();

				m_cache = null;

			}
		}
		finally
		{

			m_disposed = true; // Prevent duplicate dispose.

		}
	}
}
































